中国银行外汇牌价业务系统于2012年10月30日进行了升级,
Go语言中文网,中国 Golang 社区,Go语言学习园地,致力于构建完善的 Golang 中文社区
2018年1月14日 - 先大概说下为什么用 Golang。我是一个对语言有洁癖的人,曾经是一个C+Python 的坚定呐喊者,最常说的一句话就是,只要熟练这两种,什么情况都能应付,
如果你习惯了 Python 中简洁的 list 和 dict 操作，在 Golang 中，你不会感到孤单。一切都是那么熟悉，而且更加高效。如果你是 C++ 程序员，你会发现你又找到了 STL 的 vector 和 map 这对朋友。
同时，正因为如此，Golang 的 interface 可以用来表示任何 generic 的东西，比如一个空的 interface
7. 更多现代的特性

和C比较，Golang 完全就是一门现代化语言，原生支持的 Unicode, garbage collection, Closures (是的，和 functional programming language 类似)， function 是 first class object，等等等等。

看到这里，你可能会发现，我用了很多轻易，简单，快速之类的形容词来形容 Golang 的特点。我想说的是，一点都不夸张，连 Golang 的入门学习到提高，都比别的语言门槛低太多太多。在大部分人都有C的背景的时代，对于 Golang，从入门到能够上手做项目，最多不过半个月。Golang 给人的感觉就是太直接了，什么都直接，读源代码直接，写自己的代码也直接。

有朋友要抗议了，你把 Golang 吹的这么好，难道它就没有缺点？有，当然有，不过和它的优点比，我觉得很多缺点都是因为整个语言太新，不成熟，随着时间的推移都能得到解决，相比之下都能忍了。如果你希望进一步了解 Golang 的优缺点，可以参考以下 yufeng 写的这篇文章，系统编程语言明日之星—Go（http://blog.yufeng.info/Go.pdf）。

还有朋友要说，Golang 这么好，为什么没人用？我想说，眼界放开点，这个世界精彩的东西比你想象的多。Golang 被 Google 用于 Youtube 的数据库，被越来越多的国外公司(大部分创业公司)用于后端开发，甚至在天朝，也有完全用 Golang 做服务开发的云应用公司了。可以说，随着 Go 1 即将到来的正式推出，Golang 的使用范围，应该会越来越广。

好，总结时间

如果你是 Python 和动态语言狂热爱好者，Go 不一定能给你带来很大的惊喜，这纯粹取决于你的项目性质，考虑到 Python 目前在很多地方都用C做核心运算，速度在大部分情况下都不是大问题。scalability 是一个问题，但并不是人人都会遇到的。

如果你是C爱好者，强烈建议你学习和使用 Go。Go 可以调用 C/C++ 程序，又提供了太多的便利，速度上稍有牺牲，但并不大。在绝大部分场景下 Go 能给你带来媲美C的性能，而对于某些确实性能过于关键的场合，也可以通过 cgo 让 Go 和C搭配。

如果你是 Java 爱好者，除非你是做 Android 这种不得不用 Java 的平台，否则也建议你尝试学习 Go，这个开发上感觉的差异如同比较开载着 1 吨石头的拖拉机和开保时捷 911 那么明显，而 Java 能给你的，Go 能给得更好。

如果你是 C++ 爱好者，!@#$%^&*，恭喜你，至少你的智商应该是没问题的。人生苦短，赶紧脱离 C++ 这个苦海吧。你用来学 89 个 C++ 高级特性的时间，估计已经用 Go 写了 64 个开源项目了。

如果你是像我一样的 C 和 Python 的爱好者，对动态语言又没有特殊的热爱……我还需要说什么呢？
Python是一种解释型、面向对象、动态数据类型的高级程序设计语言。

Python由Guido van Rossum于1989年底发明，第一个公开发行版发行于1991年。

像Perl语言一样, Python 源代码同样遵循 GPL(GNU General Public License)协议。

本教程主要针对Python 2.x版本的学习，如果你使用的是Python 3.x版本请移步至Python 3.X版本的教程。


谁适合阅读本教程？
本教程适合想从零开始学习Python编程语言的开发人员。当然本教程也会对一些模块进行深入，让你更好的了解Python的应用。


学习本教程前你需要了解
在继续本教程之前，你应该了解一些基本的计算机编程术语。如果你学习过PHP，ASP等编程语言，将有助于你更快的了解Python编程。


执行Python程序
对于大多数程序语言，第一个入门编程代码便是"Hello World！"，以下代码为使用Python输出"Hello World！"：

实例(Python 2.0+)
#!/usr/bin/python

print "Hello, World!";

运行实例 »
Python 3.0+版本已经把print作为一个内置函数，正确输出"Hello World！"代码如下：

实例(Python 3.0+)
#!/usr/bin/python3

print("Hello, World!");

运行实例 »
相关文章
Python IDE(集成开发环境)介绍

Python 编码规范(Google)

Python 3.X版本的教程
Python 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。

Python 的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。

Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。

Python 是交互式语言： 这意味着，您可以在一个Python提示符，直接互动执行写你的程序。

Python 是面向对象语言: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。

Python 是初学者的语言：Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。
Python 发展历史
Python 是由 Guido van Rossum 在八十年代末和九十年代初，在荷兰国家数学和计算机科学研究所设计出来的。

Python 本身也是由诸多其他语言发展而来的,这包括 ABC、Modula-3、C、C++、Algol-68、SmallTalk、Unix shell 和其他的脚本语言等等。

像 Perl 语言一样，Python 源代码同样遵循 GPL(GNU General Public License)协议。
利嘉閣指，「Rica+」為一個人工智能搵樓平台，涉及逾 2,000 萬元投資，期望幫助客戶和代理突破裝置、地點和時間規限，提升搜索體驗。地產總裁廖偉強透露，系統目前已有 170 萬筆樓盤資料，總服務人次逾 480 萬人，每月跟進資料近 96 萬條，預料透過「Rica+」數碼轉型及進行更精準的銷售策略後，可提升公司業務收益 20 至 30%。

他續指，「Rica+」採用了 Azure 公有雲，能夠透過機械學習功能，根據樓盤的銀行估值、最近成交紀錄、業主開價紀錄，以及客戶喜好作出分析，以助地產代理預測合適的樓盤，從而提升銷售成功率。

安全方面，利嘉閣地產資訊科技部聯席董事譚宗秩表示，「Rica+」具備容貌識別和多重新分驗證技術，地產代理可隨時隨地在任何裝置上以容貌識別登入系統。他又補充，「Rica+」每次可為最多十個員工打卡。

现在 Python 是由一个核心开发团队在维护，Guido van Rossum 仍然占据着至关重要的作用，指导其进展。